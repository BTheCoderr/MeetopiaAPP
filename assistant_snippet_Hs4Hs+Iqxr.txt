1|import React, { useState } from 'react'
2|import { useRef } from 'react'
3|
4|const [isRemoteMuted, setIsRemoteMuted] = useState(false)
5|
6|const toggleRemoteMute = () => {
7|  if (remoteVideoRef.current) {
8|    remoteVideoRef.current.muted = !remoteVideoRef.current.muted
9|    setIsRemoteMuted(!isRemoteMuted)
10|  }
11|}
12|
13|        {/* Remote Video */}
14|        <div className="relative w-1/2 aspect-video bg-gray-900 rounded-lg overflow-hidden">
15|          <video
16|            ref={remoteVideoRef}
17|            autoPlay
18|            playsInline
19|            className="w-full h-full object-cover"
20|          />
21|          {!remoteStream && (
22|            <div className="absolute inset-0 flex items-center justify-center text-gray-400">
23|              Waiting for meeter...
24|            </div>
25|          )}
26|          <div className="absolute inset-x-0 bottom-0 bg-gradient-to-t from-black/70 to-transparent">
27|            <div className="flex items-center justify-center gap-2 p-2">
28|              <button
29|                onClick={toggleMute}
30|                className={`p-2 text-xs border-2 rounded-full transition-colors ${
31|                  isMuted 
32|                    ? 'border-red-500 bg-red-500 text-white' 
33|                    : 'border-white/50 text-white hover:bg-white/10'
34|                }`}
35|              >
36|                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
37|                  <path d="M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z M7 4a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V4z"/>
38|                </svg>
39|              </button>
40|              <button
41|                onClick={toggleCamera}
42|                className={`p-2 text-xs border-2 rounded-full transition-colors ${
43|                  isCameraOff 
44|                    ? 'border-red-500 bg-red-500 text-white' 
45|                    : 'border-white/50 text-white hover:bg-white/10'
46|                }`}
47|              >
48|                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
49|                  <path d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z"/>
50|                </svg>
51|              </button>
52|              {remoteStream && (
53|                <button
54|                  onClick={toggleRemoteMute}
55|                  className={`p-2 text-xs border-2 rounded-full transition-colors ${
56|                    isRemoteMuted 
57|                      ? 'border-red-500 bg-red-500 text-white' 
58|                      : 'border-white/50 text-white hover:bg-white/10'
59|                  }`}
60|                >
61|                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
62|                    <path d="M6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06zm7.137 2.096a.5.5 0 0 1 0 .708L12.207 8l1.647 1.646a.5.5 0 0 1-.708.708L11.5 8.707l-1.646 1.647a.5.5 0 0 1-.708-.708L10.793 8 9.146 6.354a.5.5 0 1 1 .708-.708L11.5 7.293l1.646-1.647a.5.5 0 0 1 .708 0z"/>
63|                  </svg>
64|                </button>
65|              )}
66|              <button
67|                onClick={() => {
68|                  if (remoteVideoRef.current) {
69|                    remoteVideoRef.current.muted = !remoteVideoRef.current.muted;
70|                  }
71|                }}
72|                className="p-2 text-xs border-2 border-white/50 text-white hover:bg-white/10 rounded-full transition-colors"
73|              >
74|                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
75|                  <path d="M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z"/>
76|                  <path d="M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z"/>
77|                  <path d="M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z"/>
78|                </svg>
79|              </button>
80|            </div>
81|          </div>
82|        </div>
83|
84|  useEffect(() => {
85|    const currentSocket = socket
86|    if (!currentSocket || !peerConnection) return
87|
88|    const handleUserFound = async ({ partnerId }: { partnerId: string }) => {
89|      console.log('Found peer:', partnerId)
90|      setCurrentPeer(partnerId)
91|      
92|      if (partnerId > (currentSocket.id ?? '') && stream) {
93|        try {
94|          // ... rest of the code using currentSocket instead of socket
95|          currentSocket.emit('call-user', { offer, to: partnerId })
96|        } catch (err) {
97|          console.error('Error creating offer:', err)
98|        }
99|      }
100|    }
101|
102|    currentSocket.on('user-found', handleUserFound)
103|
104|    return () => {
105|      currentSocket.off('user-found', handleUserFound)
106|    }
107|  }, [peerConnection, stream])
108|
109|  useEffect(() => {
110|    if (!peerConnection) return
111|
112|    return () => {
113|      if (peerConnection && peerConnection.signalingState !== 'closed') {
114|        try {
115|          peerConnection.getSenders().forEach(sender => {
116|            peerConnection.removeTrack(sender)
117|          })
118|        } catch (err) {
119|          console.warn('Error cleaning up peer connection:', err)
120|        }
121|      }
122|    }
123|  }, [peerConnection])